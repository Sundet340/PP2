from functools import reduce
import time
import math

# 1. Multiply all the numbers in a list
def multiply_list(numbers):
    return reduce(lambda x, y: x * y, numbers)

# 2. Count uppercase and lowercase letters in a string
def count_case(s):
    upper = sum(1 for char in s if char.isupper())
    lower = sum(1 for char in s if char.islower())
    return {"Uppercase": upper, "Lowercase": lower}

# 3. Check if a string is a palindrome
def is_palindrome(s):
    return s == s[::-1]

# 4. Invoke square root function after specific milliseconds
def delayed_sqrt(number, delay_ms):
    time.sleep(delay_ms / 1000)  # Convert milliseconds to seconds
    return f"Square root of {number} after {delay_ms} milliseconds is {math.sqrt(number)}"

# 5. Check if all elements in a tuple are true
def all_true(tup):
    return all(tup)

# Example Usage:
print(multiply_list([2, 3, 4]))  # Output: 24
print(count_case("Hello World"))  # Output: {'Uppercase': 2, 'Lowercase': 8}
print(is_palindrome("madam"))  # Output: True
print(delayed_sqrt(25100, 2123))  # Output: Square root of 25100 after 2123 milliseconds is 158.42979517754858
print(all_true((True, True, False)))  # Output: False
